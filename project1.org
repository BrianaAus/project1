* Which Marvel Character Are You App

** TDD?
+ Set it up, but may not use it?

** Requirements (user-stories)

*** Bare-Minimum Requirements

+ I open the app, and I see a title 'Which Marvel Character Are You?' with a picture of one or several Marvel Charcters beneath it.
+ Big ol' button that says "Start the quiz!"

+ When I click the button, the button dissapears and the first question appears with multiple (four?) answers to choose from beneath it.
+ Beneath the answers, 'previous' and 'next' button.
    - If this is the first question, the 'previous' button should not appear.
    - If this is the last question, the 'next' button should be replaced with a 'Submit your quiz' button

+ When I his the 'Submit my quiz' button, a picture of a Marvel character with the words 'You are [character name here]!' should appear with a description on why that character was chosen somewhere on the page.
+ Below the results should be a 'Take the quiz again?' button, which starts the quiz all over, starting from the first question.

*** Other Requirements

+ Single page
+ Should be images on the 'questions' pages, as well as on some of the answers.

** Example Questions:

+ If you could choose one power, which one would it be?
  - Super Strength //captain
  - Invisibility 
  - Flying
  - Super Intelligence
  - Form Changing  

+ If your friends described you in one word, what would it be?
  - Humble
  - Devious
  - Adventurous
  - Witty

+ Who would you choose as a sidekick (pictures)?
  - War Machine
  - Winter Soilder
  - Hawkeye
  - Loki


  ----------
  Black Widow  -- Super Spy -- 1009189
  Captain America -- Super Soldier -- 1009220
  Iron Man -- Super Genius -- 1009368
  Hulk -- Super Smash -- 1009351
  Hawk Eye -- Super Aim -- 1009338
  Thor -- Super Hair -- 1009664

** API

+ https://developer.marvel.com/
+ Public key: 57a9282eee09f642116d68d165ec7808

* To-Do
+ How do we implement each question? // DONE
 - Do we make a page each question? //DONE
 - Make a file, write questions /w answers, and pull from that file //DONE

+ What are our possible characters? // DONE (The Avengers)
+ How do we arrive at a character?  // DONE 

+ How do we save the answers that are chosen? // DONE

+ Getting a result from our answers // DONE
+ Create a results page // IN PROGRESS

+ How to actually pull from the API, and what are we pulling? // DONE

http://gateway.marvel.com/v1/public/characters?ts=1&apikey=57a9282eee09f642116d68d165ec7808&hash=a0bf7203d0c30c222375c89f716f66be

** Extra To-Dos 

+ Find comic book font
+ Add description results page // DONE
+ Error-handling for results fetch // DONE
+ Find another background image // DONE
+ More questions // DONE

PRESENTATION GUIDE:

- [Quick App Demo]
- We used Functional React, /w the useContext, useEffect, and useState hooks.
- [Briefly go over the API we used and the instructions for using it.] 

What did you learn?
- CHRISTIAN: During this project, I mostly got a stronger grasp on how the hooks work- especially the useContext hook. I was actually able to go back to a previous lesson after this one and finish it within minutes.
- BRIANA:  I got a better understanding on hooks too, as well as Router, JSX, and the entire organizational structure of a React project.  

Which decision was most interesting? 
- CHRISTIAN: We were probably planning on giving it at least some comic-book font from the beginning, but I think the most interesting decision was trying to make the whole think look like a comic book. I just think it looks really neat. 
- BRIANA: On the first day, when we first said buzzfeed quiz like, you would look at those quizzes and intially think we will put pictures of the characters on each question with some background color. To make the decision to give it a comic book look was fun. It makes the user experience better.

Hardest Challenge? 
- CHRISTIAN: Our hardest challenge was kind of tricky. 
- BRIANA: Some of the hardest challenge is not seeing when something that is functional is actually a problem in the coding(i++ vs i+=1) It took two clicks to move to the next page, which lead to another issue. Another was figuring out where in the project/pages to put certain events and/or hooks (useEffect) because our state(Avenger) wasn't setting accordingly on the Results page. Thank you to the insructors for their help. Also handling promises. 

What would you do given more time? 
- CHRISTIAN: Given more time, we'd probably make the Quiz logic a little more complicated so that it can handle a lot more possible heroes. Currently we only have the six Avengers you could be. Unfortunetly, there's no data on each hero as far as personality traits or the like are concerned, so we'd still probably have to decide on which ones we want and hard-code something in for each one.
- BRIANA: I would agree. Also, maybe have the pages move, as if they were zooming or swiping to the next question. 

What are you most proud of? 
- CHRISTIAN: I'm definetly most proud of the look. I think it'd look really good as an aside on a page with even more content, with more appropriate pictures and all. 
- BRIANA: The look is exciting to see and well as the UI. Especially because it was all done by code.

- [Show original app flow chart and app questions preview.]